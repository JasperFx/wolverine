// <auto-generated/>
#pragma warning disable
using Wolverine.Marten.Publishing;

namespace Internal.Generated.WolverineHandlers
{
    // START: CreateTodoRequestHandler482446425
    public class CreateTodoRequestHandler482446425 : Wolverine.Runtime.Handlers.MessageHandler
    {
        private readonly Wolverine.Marten.Publishing.OutboxedSessionFactory _outboxedSessionFactory;

        public CreateTodoRequestHandler482446425(Wolverine.Marten.Publishing.OutboxedSessionFactory outboxedSessionFactory)
        {
            _outboxedSessionFactory = outboxedSessionFactory;
        }



        public override async System.Threading.Tasks.Task HandleAsync(Wolverine.Runtime.MessageContext context, System.Threading.CancellationToken cancellation)
        {
            // Building the Marten session
            await using var documentSession = _outboxedSessionFactory.OpenSession(context);
            // The actual message body
            var createTodoRequest = (WolverineWebApi.Todos.CreateTodoRequest)context.Envelope.Message;

            
            // The actual message execution
            var outgoing1 = WolverineWebApi.Todos.TodoHandler.Handle(createTodoRequest);

            if (outgoing1 != null)
            {
                
                // Register the document operation with the current session
                documentSession.Insert(outgoing1.Entity);
            }

            
            // Save all pending changes to this Marten session
            await documentSession.SaveChangesAsync(cancellation).ConfigureAwait(false);

            
            // Have to flush outgoing messages just in case Marten did nothing because of https://github.com/JasperFx/wolverine/issues/536
            await context.FlushOutgoingMessagesAsync().ConfigureAwait(false);

        }

    }

    // END: CreateTodoRequestHandler482446425
    
    
}

