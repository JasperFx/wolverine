// <auto-generated/>
#pragma warning disable
using Microsoft.AspNetCore.Routing;
using System;
using System.Linq;
using Wolverine.Http;

namespace Internal.Generated.WolverineHandlers
{
    // START: POST_asparameterrecord_Id
    [global::System.CodeDom.Compiler.GeneratedCode("JasperFx", "1.0.0")]
    public sealed class POST_asparameterrecord_Id : Wolverine.Http.HttpHandler
    {
        private readonly Wolverine.Http.WolverineHttpOptions _wolverineHttpOptions;

        public POST_asparameterrecord_Id(Wolverine.Http.WolverineHttpOptions wolverineHttpOptions) : base(wolverineHttpOptions)
        {
            _wolverineHttpOptions = wolverineHttpOptions;
        }



        public override async System.Threading.Tasks.Task Handle(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            // Binding Form & Querystring values to the argument marked with [AsParameters]
            var Id = (string?)httpContext.GetRouteValue("Id");
            if(Id == null)
            {
                httpContext.Response.StatusCode = 404;
                return;
            }

            string Number_rawValue = httpContext.Request.Query["Number"];
            int Number = default;

            if (Number_rawValue != null && int.TryParse(Number_rawValue, System.Globalization.CultureInfo.InvariantCulture, out Number))
            {

            }

            string Direction_rawValue = ReadSingleHeaderValue(httpContext, "x-direction");
            WolverineWebApi.Direction Direction = default;

            if (WolverineWebApi.Direction.TryParse<WolverineWebApi.Direction>(Direction_rawValue, true, out Direction))
            {

            }

            string test_rawValue = httpContext.Request.Form["test"];
            bool test = default;

            if (bool.TryParse(test_rawValue, out test))
            {

            }

            var asParameterRecord = new WolverineWebApi.AsParameterRecord(Id, Number, Direction, test);
            
            // The actual HTTP request handler execution
            var asParameterRecord_response = WolverineWebApi.AsParameterRecordEndpoint.Post(asParameterRecord);

            // Writing the response body to JSON because this was the first 'return variable' in the method signature
            await WriteJsonAsync(httpContext, asParameterRecord_response);
        }

    }

    // END: POST_asparameterrecord_Id
    
    
}

