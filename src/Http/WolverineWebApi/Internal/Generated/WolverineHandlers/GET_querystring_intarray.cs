// <auto-generated/>
#pragma warning disable
using Microsoft.AspNetCore.Routing;
using System;
using System.Linq;
using Wolverine.Http;

namespace Internal.Generated.WolverineHandlers
{
    // START: GET_querystring_intarray
    public class GET_querystring_intarray : Wolverine.Http.HttpHandler
    {
        private readonly Wolverine.Http.WolverineHttpOptions _wolverineHttpOptions;

        public GET_querystring_intarray(Wolverine.Http.WolverineHttpOptions wolverineHttpOptions) : base(wolverineHttpOptions)
        {
            _wolverineHttpOptions = wolverineHttpOptions;
        }



        public override async System.Threading.Tasks.Task Handle(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var values_List = new System.Collections.Generic.List<int>();
            foreach (var valuesValue in httpContext.Request.Query["values"])
            {
                if (int.TryParse(valuesValue, System.Globalization.CultureInfo.InvariantCulture, out var valuesValueParsed))
                {
                    values_List.Add(valuesValueParsed);
                }

            }

            var values = values_List.ToArray();
            
            // The actual HTTP request handler execution
            var result_of_IntArray = WolverineWebApi.QuerystringEndpoints.IntArray(values);

            await WriteString(httpContext, result_of_IntArray);
        }

    }

    // END: GET_querystring_intarray
    
    
}

