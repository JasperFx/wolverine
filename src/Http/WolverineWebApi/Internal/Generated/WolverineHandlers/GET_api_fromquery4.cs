// <auto-generated/>
#pragma warning disable
using Microsoft.AspNetCore.Routing;
using System;
using System.Linq;
using Wolverine.Http;

namespace Internal.Generated.WolverineHandlers
{
    // START: GET_api_fromquery4
    [global::System.CodeDom.Compiler.GeneratedCode("JasperFx", "1.0.0")]
    public sealed class GET_api_fromquery4 : Wolverine.Http.HttpHandler
    {
        private readonly Wolverine.Http.WolverineHttpOptions _wolverineHttpOptions;

        public GET_api_fromquery4(Wolverine.Http.WolverineHttpOptions wolverineHttpOptions) : base(wolverineHttpOptions)
        {
            _wolverineHttpOptions = wolverineHttpOptions;
        }



        public override async System.Threading.Tasks.Task Handle(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            string Direction_rawValue = httpContext.Request.Query["Direction"];
            WolverineWebApi.Direction Direction = default;

            if (WolverineWebApi.Direction.TryParse<WolverineWebApi.Direction>(Direction_rawValue, true, out Direction))
            {

            }

            string Number_rawValue = httpContext.Request.Query["Number"];
            int Number = default;

            if (Number_rawValue != null && int.TryParse(Number_rawValue, System.Globalization.CultureInfo.InvariantCulture, out Number))
            {

            }

            var Name = httpContext.Request.Query["Name"];
            // Binding QueryString values to the argument marked with [FromQuery]
            var query4 = new WolverineWebApi.Query4(Name, Number, Direction);
            
            // The actual HTTP request handler execution
            var query4_response = WolverineWebApi.FromQueryEndpoints.Get(query4);

            // Writing the response body to JSON because this was the first 'return variable' in the method signature
            await WriteJsonAsync(httpContext, query4_response);
        }

    }

    // END: GET_api_fromquery4
    
    
}

