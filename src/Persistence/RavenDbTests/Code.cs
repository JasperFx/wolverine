// <auto-generated/>
#pragma warning disable
using Raven.Client.Documents;

namespace Internal.Generated.WolverineHandlers
{
    // START: CreateTodoHandler1536167811
    public class CreateTodoHandler1536167811 : Wolverine.Runtime.Handlers.MessageHandler
    {
        private readonly Raven.Client.Documents.IDocumentStore _documentStore;

        public CreateTodoHandler1536167811(Raven.Client.Documents.IDocumentStore documentStore)
        {
            _documentStore = documentStore;
        }



        public override async System.Threading.Tasks.Task HandleAsync(Wolverine.Runtime.MessageContext context, System.Threading.CancellationToken cancellation)
        {
            // The actual message body
            var createTodo = (Wolverine.ComplianceTests.CreateTodo)context.Envelope.Message;


            // Open a new document session 
            // message context to support the outbox functionality
            using var asyncDocumentSession = _documentStore.OpenAsyncSession();
            context.EnlistInOutbox(new Wolverine.RavenDb.Internals.RavenDbEnvelopeTransaction(asyncDocumentSession, context));
            
            // The actual message execution
            var outgoing1 = Wolverine.ComplianceTests.TodoHandler.Handle(createTodo);

            if (outgoing1 != null)
            {
                await asyncDocumentSession.StoreAsync(outgoing1.Entity, cancellation).ConfigureAwait(false);
            }

            
            // Commit any outstanding RavenDb changes
            await asyncDocumentSession.SaveChangesAsync(cancellation).ConfigureAwait(false);

            
            // Have to flush outgoing messages just in case Marten did nothing because of https://github.com/JasperFx/wolverine/issues/536
            await context.FlushOutgoingMessagesAsync().ConfigureAwait(false);

        }

    }

    // END: CreateTodoHandler1536167811
    
    
}